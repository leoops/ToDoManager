{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScreens = useScreens;\n  exports.ScreenContainer = exports.Screen = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _jsxFileName = \"/home/react/Documentos/Multi-plataforma/ToDoManager/node_modules/react-native-screens/src/screens.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    Screen: {\n      displayName: \"Screen\"\n    },\n    ScreenContainer: {\n      displayName: \"ScreenContainer\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/react/Documentos/Multi-plataforma/ToDoManager/node_modules/react-native-screens/src/screens.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var USE_SCREENS = false;\n\n  function useScreens() {\n    var shouldUseScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    USE_SCREENS = shouldUseScreens;\n\n    if (USE_SCREENS && !_reactNative.UIManager['RNSScreen']) {\n      console.error(\"Screen native module hasn't bee linked. Please check README for more details\");\n    }\n  }\n\n  var NativeScreen = _reactNative.Animated.createAnimatedComponent((0, _reactNative.requireNativeComponent)('RNSScreen', null));\n\n  var NativeScreenContainer = (0, _reactNative.requireNativeComponent)('RNSScreenContainer', null);\n\n  var Screen = function (_React$Component) {\n    function Screen() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, Screen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Screen)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.setRef = function (ref) {\n        _this._ref = ref;\n        _this.props.onComponentRef && _this.props.onComponentRef(ref);\n      }, _temp));\n    }\n\n    _createClass(Screen, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {\n        this._ref.setNativeProps(props);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        if (!USE_SCREENS) {\n          var _this$props = this.props,\n              active = _this$props.active,\n              onComponentRef = _this$props.onComponentRef,\n              props = _objectWithoutProperties(_this$props, [\"active\", \"onComponentRef\"]);\n\n          return _react.default.createElement(_reactNative.Animated.View, _extends({}, props, {\n            ref: this.setRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            }\n          }));\n        } else {\n          var _this$props2 = this.props,\n              style = _this$props2.style,\n              children = _this$props2.children,\n              rest = _objectWithoutProperties(_this$props2, [\"style\", \"children\"]);\n\n          return _react.default.createElement(NativeScreen, _extends({}, rest, {\n            ref: this.setRef,\n            style: _reactNative.StyleSheet.absoluteFill,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            }\n          }), _react.default.createElement(_reactNative.Animated.View, {\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            }\n          }, children));\n        }\n      }\n    }]);\n\n    _inherits(Screen, _React$Component);\n\n    return Screen;\n  }(_react.default.Component);\n\n  exports.Screen = Screen;\n  exports.Screen = Screen = _wrapComponent(\"Screen\")(Screen);\n\n  var ScreenContainer = function (_React$Component2) {\n    function ScreenContainer() {\n      _classCallCheck(this, ScreenContainer);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ScreenContainer).apply(this, arguments));\n    }\n\n    _createClass(ScreenContainer, [{\n      key: \"render\",\n      value: function render() {\n        if (!USE_SCREENS) {\n          return _react.default.createElement(_reactNative.View, _extends({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            }\n          }));\n        } else {\n          return _react.default.createElement(NativeScreenContainer, _extends({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            }\n          }));\n        }\n      }\n    }]);\n\n    _inherits(ScreenContainer, _React$Component2);\n\n    return ScreenContainer;\n  }(_react.default.Component);\n\n  exports.ScreenContainer = ScreenContainer;\n  exports.ScreenContainer = ScreenContainer = _wrapComponent(\"ScreenContainer\")(ScreenContainer);\n});","map":[[8,0,1,0],[12,0,2,0],[60,0,10,0],[60,6,10,4,"USE_SCREENS"],[60,20,10,18],[60,25,10,0],[62,0,12,7],[62,11,12,16,"useScreens"],[62,21,12,7],[62,24,12,52],[63,0,12,52],[63,8,12,27,"shouldUseScreens"],[63,24,12,52],[63,95,12,46],[63,99,12,52],[64,0,13,2,"USE_SCREENS"],[64,18,13,16,"shouldUseScreens"],[64,34,13,2],[66,0,14,2],[66,8,14,6,"USE_SCREENS"],[66,23,14,21],[66,24,14,22,"UIManager"],[66,47,14,32],[66,58,14,22],[66,59,14,2],[66,61,14,46],[67,0,15,4,"console"],[67,14,15,12,"error"],[67,19,15,4],[68,0,18,3],[69,0,19,1],[71,0,21,0],[71,6,21,6,"NativeScreen"],[71,21,21,21,"Animated"],[71,43,21,30,"createAnimatedComponent"],[71,66,21,21],[71,67,22,2],[71,108,22,25],[71,119,22,2],[71,121,22,38],[71,125,22,2],[71,126,21,21],[71,127,21,0],[73,0,25,0],[73,6,25,6,"NativeScreenContainer"],[73,30,25,30],[73,71,26,2],[73,91,25,30],[73,93,27,2],[73,97,25,30],[73,98,25,0],[75,6,30,13,"Screen"],[75,12],[87,200,34,2,"setRef"],[87,206],[87,209,34,11],[87,224,34,18],[88,0,35,4],[88,14,35,9,"_ref"],[88,18,35,4],[88,21,35,16,"ref"],[88,24,35,4],[89,0,36,4],[89,14,36,9,"props"],[89,19,36,4],[89,20,36,15,"onComponentRef"],[89,34,36,4],[89,38,36,33],[89,44,36,38,"props"],[89,49,36,33],[89,50,36,44,"onComponentRef"],[89,64,36,33],[89,65,36,59,"ref"],[89,68,36,33],[89,69,36,4],[90,0,37,3],[90,7],[95,37,31,17,"props"],[95,42],[95,44,31,24],[96,0,32,4],[96,13,32,9,"_ref"],[96,17,32,4],[96,18,32,14,"setNativeProps"],[96,32,32,4],[96,33,32,29,"props"],[96,38,32,4],[97,0,33,3],[100,31,38,11],[101,0,39,4],[101,12,39,8],[101,13,39,9,"USE_SCREENS"],[101,24,39,4],[101,26,39,22],[102,0,39,22],[102,28,45,51],[102,33,45,56,"props"],[102,38,39,22],[103,0,39,22],[103,14,45,14,"active"],[103,20,39,22],[103,35,45,14,"active"],[103,41,39,22],[104,0,39,22],[104,14,45,22,"onComponentRef"],[104,28,39,22],[104,43,45,22,"onComponentRef"],[104,57,39,22],[105,0,39,22],[105,14,45,41,"props"],[105,19,39,22],[107,0,47,6],[107,17,47,13],[107,46,47,14],[107,67,47,13],[107,68,47,23],[107,72,47,13],[107,87,47,32,"props"],[107,92,47,13],[108,0,47,39],[108,17,47,44],[108,22,47,49,"setRef"],[108,28,47,13],[109,0,47,13],[110,0,47,13],[111,0,47,13],[112,0,47,13],[113,0,47,13],[113,13,47,6],[114,0,48,5],[114,9,39,4],[114,15,48,11],[115,0,48,11],[115,29,49,43],[115,34,49,48,"props"],[115,39,48,11],[116,0,48,11],[116,14,49,14,"style"],[116,19,48,11],[116,35,49,14,"style"],[116,40,48,11],[117,0,48,11],[117,14,49,21,"children"],[117,22,48,11],[117,38,49,21,"children"],[117,46,48,11],[118,0,48,11],[118,14,49,34,"rest"],[118,18,48,11],[120,0,50,6],[120,17,51,8],[120,46,51,9],[120,58,51,8],[120,73,52,14,"rest"],[120,77,51,8],[121,0,53,10],[121,17,53,15],[121,22,53,20,"setRef"],[121,28,51,8],[122,0,54,10],[122,19,54,17,"StyleSheet"],[122,43,54,28,"absoluteFill"],[122,55,51,8],[123,0,51,8],[124,0,51,8],[125,0,51,8],[126,0,51,8],[127,0,51,8],[127,14,62,10],[127,43,62,11],[127,64,62,10],[127,65,62,20],[127,69,62,10],[128,0,62,25],[128,19,62,32,"style"],[128,24,62,10],[129,0,62,10],[130,0,62,10],[131,0,62,10],[132,0,62,10],[133,0,62,10],[133,13,62,40,"children"],[133,21,62,10],[133,22,51,8],[133,23,50,6],[134,0,65,5],[135,0,66,3],[141,4,30,28,"React"],[141,19,30,34,"Component"],[141,28],[146,6,69,13,"ScreenContainer"],[146,21],[155,31,70,11],[156,0,71,4],[156,12,71,8],[156,13,71,9,"USE_SCREENS"],[156,24,71,4],[156,26,71,22],[157,0,72,6],[157,17,72,13],[157,46,72,14],[157,63,72,13],[157,78,72,23],[157,83,72,28,"props"],[157,88,72,13],[158,0,72,13],[159,0,72,13],[160,0,72,13],[161,0,72,13],[162,0,72,13],[162,13,72,6],[163,0,73,5],[163,9,71,4],[163,15,73,11],[164,0,74,6],[164,17,74,13],[164,46,74,14],[164,67,74,13],[164,82,74,40],[164,87,74,45,"props"],[164,92,74,13],[165,0,74,13],[166,0,74,13],[167,0,74,13],[168,0,74,13],[169,0,74,13],[169,13,74,6],[170,0,75,5],[171,0,76,3],[177,4,69,37,"React"],[177,19,69,43,"Component"],[177,28]]},"type":"js/module"}]}